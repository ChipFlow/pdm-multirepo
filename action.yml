name: 'PDM Multirepo branches'
description: 'For git+https dependencies, check if the current branch name exitsts there and use it if it does'
inputs:
  working-directory:
    description: 'Working directory'
    required: false
    type: string
    default: './'
  pdm-lock-flags:
    description: 'Flags to use for PDM lock'
    required: false
    type: string
    default: '--dev'
outputs:
  overrides-generated:
    description: "True if overrides were generated and used"
    value: ${{ steps.gen-overrides.outputs.overrides_generated }}

runs:
  using: "composite"
  steps:
    - name: Check PDM initialised
      shell: bash
      run: |
        pdm > /dev/null 2>&1 || echo "::error Calling workflow must initialise PDM first (use pdm-project/setup-pdm)"

    - name: Generate overrides to use current branch if PR
      id: gen-overrides
      working-directory: ${{ inputs.working-directory }}
      if: github.event_name == 'pull_request'
      shell: bash
      run: |
        pdm run ${{github.action_path}}/gen_overrides.py ${{github.head_ref}} > overrides.txt
        if [ -s overrides.txt ]; then
          echo "Generated overrides:"
          cat overrides.txt
          echo "overrides_generated=1" >> "$GITHUB_OUTPUT"
          echo "** Using overrides for $GITHUB_JOB **" > override.msg
          cat overrides.txt >> override.msg
        fi

    - name: Message overrides
      if: ${{ steps.gen-overrides.overrides_generated && github.event_name == 'pull_request' }}
      uses: thollander/actions-comment-pull-request@v3
      with:
        file-path:  '${{ inputs.working-directory }}/override.msg'
        comment-tag: ${{github.job}}-override
        create-if-not-exists: true

    - name: Relock PDM
      working-directory: ${{ inputs.working-directory }}
      if: github.event_name != 'pull_request'
      shell: bash
      env:
        PDM_LOCK_FLAGS: '${{inputs.pdm-lock-flags}}'
      run: pdm lock $PDM_LOCK_FLAGS

    - name: Relock PDM (PR)
      working-directory: ${{ inputs.working-directory }}
      if: github.event_name == 'pull_request'
      shell: bash
      env:
        PDM_LOCK_FLAGS: '${{inputs.pdm-lock-flags}}'
      run: pdm lock $PDM_LOCK_FLAGS --override overrides.txt

    - name: Install dependencies
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: pdm install


